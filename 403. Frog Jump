class Solution {
    public boolean canCross(int[] stones) {
        if (stones == null || stones.length == 0) return false;
        
        
        HashMap<Integer, HashSet<Integer>> map = new HashMap<>();
        for (int stone : stones) {
            map.put(stone, new HashSet<>());
        }
        
       
        map.get(0).add(0);
        
        for (int i = 0; i < stones.length; i++) {
            int stone = stones[i];
            HashSet<Integer> jumps = map.get(stone);
            for (int jump : jumps) {
                
                for (int nextJump = jump - 1; nextJump <= jump + 1; nextJump++) {
                    if (nextJump > 0 && map.containsKey(stone + nextJump)) {
                        map.get(stone + nextJump).add(nextJump);
                    }
                }
            }
        }
        
        
        return !map.get(stones[stones.length - 1]).isEmpty(); 
    }
}
