public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt(); 
        while (t-- > 0) {
            int n = sc.nextInt();  
            int c = sc.nextInt();  s
            int[] stalls = new int[n];
            
            for (int i = 0; i < n; i++) {
                stalls[i] = sc.nextInt();
            }
            
            Arrays.sort(stalls);
            
            System.out.println(findLargestMinDistance(stalls, n, c));
        }
        
        sc.close();
    }

    private static int findLargestMinDistance(int[] stalls, int n, int c) {
        int left = 1;  
        int right = stalls[n - 1] - stalls[0];  
        int result = 0;
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            
            if (canPlaceCows(stalls, n, c, mid)) {
                result = mid;  
                left = mid + 1;
            } else {
                right = mid - 1;  
            }
        }
        
        return result;
    }

    private static boolean canPlaceCows(int[] stalls, int n, int c, int minDist) {
        int count = 1; 
        int lastPosition = stalls[0];
        
        for (int i = 1; i < n; i++) {
            if (stalls[i] - lastPosition >= minDist) {
                count++;
                lastPosition = stalls[i];
                
                if (count == c) {
                    return true;
                }
            }
        }
        
        return false;
    }
}
