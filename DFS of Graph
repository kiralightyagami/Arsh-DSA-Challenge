class Solution {
  
   private void dfs(int node, ArrayList<ArrayList<Integer>> adj, boolean[] visited, ArrayList<Integer> result) {
   
        visited[node] = true;
        result.add(node);

      
        for (int neighbor : adj.get(node)) {
            if (!visited[neighbor]) {
                dfs(neighbor, adj, visited, result);
            }
        }
    }

  
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
     
        boolean[] visited = new boolean[V];
        ArrayList<Integer> result = new ArrayList<>();

       
        dfs(0, adj, visited, result);

        return result;
    }
}
