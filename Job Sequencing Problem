class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
    Arrays.sort(arr, new Comparator<Job>() {
            @Override
            public int compare(Job j1, Job j2) {
                return j2.profit - j1.profit;
            }
        });

        
        int maxDeadline = 0;
        for (Job job : arr) {
            if (job.deadline > maxDeadline) {
                maxDeadline = job.deadline;
            }
        }

        
        int[] resultSlots = new int[maxDeadline + 1]; 
        Arrays.fill(resultSlots, -1); 

        int totalJobs = 0;
        int totalProfit = 0;

        
        for (Job job : arr) {
            
            for (int j = job.deadline; j > 0; j--) {
                if (resultSlots[j] == -1) {
                   
                    resultSlots[j] = job.id; 
                    totalJobs++;
                    totalProfit += job.profit;
                    break; 
                }
            }
        }

        
        return new int[] {totalJobs, totalProfit};
    }
}
