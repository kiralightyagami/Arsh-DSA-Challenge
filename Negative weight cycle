class Solution
{
    public int isNegativeWeightCycle(int n, int[][] edges)
    {
       for (int i = 0; i < n; i++) {
          
            int[] dist = new int[n];
            for (int j = 0; j < n; j++) {
                dist[j] = Integer.MAX_VALUE;
            }
            dist[i] = 0;
            
           
            for (int j = 1; j < n; j++) {
                for (int[] edge : edges) {
                    int u = edge[0];
                    int v = edge[1];
                    int weight = edge[2];
                    if (dist[u] != Integer.MAX_VALUE && dist[u] + weight < dist[v]) {
                        dist[v] = dist[u] + weight;
                    }
                }
            }
            
          
            for (int[] edge : edges) {
                int u = edge[0];
                int v = edge[1];
                int weight = edge[2];
                if (dist[u] != Integer.MAX_VALUE && dist[u] + weight < dist[v]) {
                    return 1;  
                }
            }
        }
        
        return 0;
    }
}
