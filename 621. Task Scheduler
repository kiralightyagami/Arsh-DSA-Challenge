class Solution {
    public int leastInterval(char[] tasks, int n) {
    int[] taskCounts = new int[26];
        for (char task : tasks) {
            taskCounts[task - 'A']++;
        }
        
       
        Arrays.sort(taskCounts);
        
       
        int maxFreq = taskCounts[25];
        
    
        int maxCount = 0;
        for (int count : taskCounts) {
            if (count == maxFreq) {
                maxCount++;
            }
        }
        
        
        int partCount = maxFreq - 1;
        int partLength = n - (maxCount - 1);
        int emptySlots = partCount * partLength;
        int remainingTasks = tasks.length - (maxFreq * maxCount);
        int idles = Math.max(0, emptySlots - remainingTasks);
        
        return tasks.length + idles;
    }
}
