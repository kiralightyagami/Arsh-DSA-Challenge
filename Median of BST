class Tree
{
    private int countNodes(Node root) {
        if (root == null) return 0;
        return 1 + countNodes(root.left) + countNodes(root.right);
    }

    private void inorder(Node root, int[] count, int target, int[] result) {
        if (root == null) return;

        
        inorder(root.left, count, target, result);

       
        count[0]++;
        if (count[0] == target) {
            result[0] = root.data;
        }
        if (count[0] == target + 1) {
            result[1] = root.data;
        }

        
        inorder(root.right, count, target, result);
    }

    public float findMedian(Node root) {
        if (root == null) return 0;

       
        int n = countNodes(root);

       
        int[] result = new int[2]; 
        int[] count = new int[1];  

     
        if (n % 2 == 1) {
            inorder(root, count, (n + 1) / 2, result);
            return result[0];
        } else {
            inorder(root, count, n / 2, result);
            return (result[0] + result[1]) / 2.0f;
    }
}
}
