class GfG {
    int findDist(Node root, int a, int b) {
         Node lca = findLCA(root, a, b);
        
       
        int distA = findDistance(lca, a, 0);
        int distB = findDistance(lca, b, 0);
        
      
        return distA + distB;
    }
    
   
    Node findLCA(Node root, int a, int b) {
        if (root == null) return null;
        
        if (root.data == a || root.data == b) return root;
        
        Node leftLCA = findLCA(root.left, a, b);
        Node rightLCA = findLCA(root.right, a, b);
        
        if (leftLCA != null && rightLCA != null) return root;
        
        return (leftLCA != null) ? leftLCA : rightLCA;
    }
    
   
    int findDistance(Node root, int val, int dist) {
        if (root == null) return -1;
        
        if (root.data == val) return dist;
        
        int leftDist = findDistance(root.left, val, dist + 1);
        if (leftDist != -1) return leftDist;
        
        return findDistance(root.right, val, dist + 1);
    }
}
